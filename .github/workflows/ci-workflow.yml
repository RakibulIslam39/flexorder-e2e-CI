name: FlexOrder CI/CD Pipeline

on:
  push:
    branches: [main, dev, qa]
  # pull_request:
  #   branches: [main, dev, qa]
  workflow_call:
    inputs:
      free_ref:
        required: false
        type: string
        default: main
      pro_ref:
        required: false
        type: string
        default: main

env:
  NODE_VERSION: '18'
  PHP_VERSION: '8.1'
  WORDPRESS_VERSION: '6.7'
  WOOCOMMERCE_VERSION: '8.5.0'
  MYSQL_VERSION: '8.0'

jobs:
  setup-wordpress:
    name: Setup WordPress, Deploy Plugins, Test, Report
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
    steps:
      - name: Checkout CI Workflow Repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright
        run: npx playwright install --with-deps

      # Start Docker/WordPress/MySQL
      - name: Start WordPress with Docker
        run: |
          docker compose -f docker-compose.fresh-wordpress.yml up -d
          sleep 30

      - name: Wait for WordPress
        run: |
          echo "Waiting for MySQL and WordPress to be ready..."
          timeout=300
          counter=0
          until docker exec flexorder-mysql mysqladmin ping -h localhost --silent; do
            echo "Waiting for MySQL... (${counter}s)"
            sleep 5
            counter=$((counter + 5))
            if [ $counter -ge $timeout ]; then
              echo "❌ MySQL failed to start within ${timeout} seconds"
              docker compose -f docker-compose.fresh-wordpress.yml logs
              exit 1
            fi
          done
          echo "✅ MySQL is ready!"
          while ! curl -f http://localhost:8080 >/dev/null 2>&1; do
            echo "Waiting for WordPress... (${counter}s)"
            sleep 10
            counter=$((counter + 10))
            if [ $counter -ge $timeout ]; then
              echo "❌ WordPress failed to start within ${timeout} seconds"
              docker compose -f docker-compose.fresh-wordpress.yml logs
              exit 1
            fi
          done
          echo "✅ WordPress is ready!"
          
      # --- Generate Test Data ---
      - name: Generate Test Data
        run: node scripts/setup-ci-environment.js --generate-test-data

      # --- Build and Deploy Plugins ---
      - name: Checkout Free Plugin (flexorder)
        uses: actions/checkout@v4
        with:
          repository: WPPOOL/flexorder
          ref: ${{ inputs.free_ref }}
          path: flexorder

      - name: Checkout Pro Plugin (flexorder-ultimate)
        uses: actions/checkout@v4
        with:
          repository: WPPOOL/flexorder-ultimate
          ref: ${{ inputs.pro_ref }}
          path: flexorder-ultimate

      - name: Zip Free Plugin
        run: |
          cd flexorder
          zip -r ../flexorder.zip .
          cd ..

      - name: Zip Pro Plugin
        run: |
          cd flexorder-ultimate
          zip -r ../flexorder-ultimate.zip .
          cd ..

      - name: Install Free Plugin
        run: wp plugin install flexorder.zip --activate --allow-root

      - name: Install Pro Plugin
        run: wp plugin install flexorder-ultimate.zip --activate --allow-root

      # --- Run E2E Tests ---
      - name: Run E2E Tests
        run: timeout 1800 npm run test:ci:full -- --project=${{ matrix.browser }}
        env:
          CI: true
          FRESH_SITE_URL: http://localhost:8080
          DB_HOST: 127.0.0.1
          DB_NAME: flexorder_test
          DB_USER: flexorder_user
          DB_PASSWORD: flexorder_pass

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.browser }}
          path: |
            test-results/
            playwright-report/
            *.png
            *.webm

      # --- Send Report via Email (if fail) ---
      - name: Send Report via Email
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          from: no-replay@gmail.com
          to: ${{ secrets.SLACK_EMAIL }}
          subject: "Automation Test Report - Playwright"
          body: |
            Hi Team,

            The automation tests for the production site have completed.
            Please check the attached report for details.
            
            $(cat playwright-report/index.html)
          attachments: |
            ${{ github.workspace }}/playwright-report/index.html

  cleanup:
    name: Cleanup
    runs-on: ubuntu-latest
    needs: [setup-wordpress]
    if: always()
    steps:
      - name: Stop Docker containers
        run: |
          docker compose -f docker-compose.fresh-wordpress.yml down -v
          docker system prune -f 